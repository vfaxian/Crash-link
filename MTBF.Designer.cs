//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3625
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SEMC.CrashLink.BackgroudService {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MTBF")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MTBF : global::System.Data.DataSet {
        
        private tblPhoneModelDataTable tabletblPhoneModel;
        
        private tblCrashLinkDataTable tabletblCrashLink;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MTBF() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected MTBF(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tblPhoneModel"] != null)) {
                    base.Tables.Add(new tblPhoneModelDataTable(ds.Tables["tblPhoneModel"]));
                }
                if ((ds.Tables["tblCrashLink"] != null)) {
                    base.Tables.Add(new tblCrashLinkDataTable(ds.Tables["tblCrashLink"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblPhoneModelDataTable tblPhoneModel {
            get {
                return this.tabletblPhoneModel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblCrashLinkDataTable tblCrashLink {
            get {
                return this.tabletblCrashLink;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            MTBF cln = ((MTBF)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tblPhoneModel"] != null)) {
                    base.Tables.Add(new tblPhoneModelDataTable(ds.Tables["tblPhoneModel"]));
                }
                if ((ds.Tables["tblCrashLink"] != null)) {
                    base.Tables.Add(new tblCrashLinkDataTable(ds.Tables["tblCrashLink"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletblPhoneModel = ((tblPhoneModelDataTable)(base.Tables["tblPhoneModel"]));
            if ((initTable == true)) {
                if ((this.tabletblPhoneModel != null)) {
                    this.tabletblPhoneModel.InitVars();
                }
            }
            this.tabletblCrashLink = ((tblCrashLinkDataTable)(base.Tables["tblCrashLink"]));
            if ((initTable == true)) {
                if ((this.tabletblCrashLink != null)) {
                    this.tabletblCrashLink.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "MTBF";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MTBF.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletblPhoneModel = new tblPhoneModelDataTable();
            base.Tables.Add(this.tabletblPhoneModel);
            this.tabletblCrashLink = new tblCrashLinkDataTable();
            base.Tables.Add(this.tabletblCrashLink);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblPhoneModel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblCrashLink() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MTBF ds = new MTBF();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void tblPhoneModelRowChangeEventHandler(object sender, tblPhoneModelRowChangeEvent e);
        
        public delegate void tblCrashLinkRowChangeEventHandler(object sender, tblCrashLinkRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblPhoneModelDataTable : global::System.Data.TypedTableBase<tblPhoneModelRow> {
            
            private global::System.Data.DataColumn columnPhoneModel_Id;
            
            private global::System.Data.DataColumn columnOffName;
            
            private global::System.Data.DataColumn columnWorkingName;
            
            private global::System.Data.DataColumn columnShortName;
            
            private global::System.Data.DataColumn columnOldSwMessage;
            
            private global::System.Data.DataColumn columnOldSwMessageActive;
            
            private global::System.Data.DataColumn columnOldModelMessage;
            
            private global::System.Data.DataColumn columnOldModelMessageActive;
            
            private global::System.Data.DataColumn columnAutoAdd;
            
            private global::System.Data.DataColumn columnApproved;
            
            private global::System.Data.DataColumn columnPhoneImage;
            
            private global::System.Data.DataColumn columnPhoneImageURL;
            
            private global::System.Data.DataColumn columnChipset;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnInsertTS;
            
            private global::System.Data.DataColumn columnEditTS;
            
            private global::System.Data.DataColumn columnInsertSemcId;
            
            private global::System.Data.DataColumn columnEditSemcId;
            
            private global::System.Data.DataColumn columnCluster;
            
            private global::System.Data.DataColumn columnEmmaSwFsTemplate;
            
            private global::System.Data.DataColumn columnEmmaSwFsCdaTemplate;
            
            private global::System.Data.DataColumn columnEmmaSwDeltaTemplate;
            
            private global::System.Data.DataColumn columnPlatform;
            
            private global::System.Data.DataColumn columnMother;
            
            private global::System.Data.DataColumn columnSWRRatRTL;
            
            private global::System.Data.DataColumn columnPBU_ID;
            
            private global::System.Data.DataColumn columnTrueUserResponsibleUserID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPhoneModelDataTable() {
                this.TableName = "tblPhoneModel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblPhoneModelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblPhoneModelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneModel_IdColumn {
                get {
                    return this.columnPhoneModel_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OffNameColumn {
                get {
                    return this.columnOffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkingNameColumn {
                get {
                    return this.columnWorkingName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShortNameColumn {
                get {
                    return this.columnShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldSwMessageColumn {
                get {
                    return this.columnOldSwMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldSwMessageActiveColumn {
                get {
                    return this.columnOldSwMessageActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldModelMessageColumn {
                get {
                    return this.columnOldModelMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldModelMessageActiveColumn {
                get {
                    return this.columnOldModelMessageActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AutoAddColumn {
                get {
                    return this.columnAutoAdd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApprovedColumn {
                get {
                    return this.columnApproved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneImageColumn {
                get {
                    return this.columnPhoneImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneImageURLColumn {
                get {
                    return this.columnPhoneImageURL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChipsetColumn {
                get {
                    return this.columnChipset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertTSColumn {
                get {
                    return this.columnInsertTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EditTSColumn {
                get {
                    return this.columnEditTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertSemcIdColumn {
                get {
                    return this.columnInsertSemcId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EditSemcIdColumn {
                get {
                    return this.columnEditSemcId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClusterColumn {
                get {
                    return this.columnCluster;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmmaSwFsTemplateColumn {
                get {
                    return this.columnEmmaSwFsTemplate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmmaSwFsCdaTemplateColumn {
                get {
                    return this.columnEmmaSwFsCdaTemplate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmmaSwDeltaTemplateColumn {
                get {
                    return this.columnEmmaSwDeltaTemplate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlatformColumn {
                get {
                    return this.columnPlatform;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MotherColumn {
                get {
                    return this.columnMother;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SWRRatRTLColumn {
                get {
                    return this.columnSWRRatRTL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PBU_IDColumn {
                get {
                    return this.columnPBU_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrueUserResponsibleUserIDColumn {
                get {
                    return this.columnTrueUserResponsibleUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPhoneModelRow this[int index] {
                get {
                    return ((tblPhoneModelRow)(this.Rows[index]));
                }
            }
            
            public event tblPhoneModelRowChangeEventHandler tblPhoneModelRowChanging;
            
            public event tblPhoneModelRowChangeEventHandler tblPhoneModelRowChanged;
            
            public event tblPhoneModelRowChangeEventHandler tblPhoneModelRowDeleting;
            
            public event tblPhoneModelRowChangeEventHandler tblPhoneModelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblPhoneModelRow(tblPhoneModelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPhoneModelRow AddtblPhoneModelRow(
                        string OffName, 
                        string WorkingName, 
                        string ShortName, 
                        string OldSwMessage, 
                        bool OldSwMessageActive, 
                        string OldModelMessage, 
                        bool OldModelMessageActive, 
                        bool AutoAdd, 
                        bool Approved, 
                        byte[] PhoneImage, 
                        string PhoneImageURL, 
                        string Chipset, 
                        string Comment, 
                        System.DateTime InsertTS, 
                        System.DateTime EditTS, 
                        string InsertSemcId, 
                        string EditSemcId, 
                        string Cluster, 
                        string EmmaSwFsTemplate, 
                        string EmmaSwFsCdaTemplate, 
                        string EmmaSwDeltaTemplate, 
                        string Platform, 
                        bool Mother, 
                        decimal SWRRatRTL, 
                        long PBU_ID, 
                        long TrueUserResponsibleUserID) {
                tblPhoneModelRow rowtblPhoneModelRow = ((tblPhoneModelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        OffName,
                        WorkingName,
                        ShortName,
                        OldSwMessage,
                        OldSwMessageActive,
                        OldModelMessage,
                        OldModelMessageActive,
                        AutoAdd,
                        Approved,
                        PhoneImage,
                        PhoneImageURL,
                        Chipset,
                        Comment,
                        InsertTS,
                        EditTS,
                        InsertSemcId,
                        EditSemcId,
                        Cluster,
                        EmmaSwFsTemplate,
                        EmmaSwFsCdaTemplate,
                        EmmaSwDeltaTemplate,
                        Platform,
                        Mother,
                        SWRRatRTL,
                        PBU_ID,
                        TrueUserResponsibleUserID};
                rowtblPhoneModelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblPhoneModelRow);
                return rowtblPhoneModelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPhoneModelRow FindByPhoneModel_Id(long PhoneModel_Id) {
                return ((tblPhoneModelRow)(this.Rows.Find(new object[] {
                            PhoneModel_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblPhoneModelDataTable cln = ((tblPhoneModelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblPhoneModelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPhoneModel_Id = base.Columns["PhoneModel_Id"];
                this.columnOffName = base.Columns["OffName"];
                this.columnWorkingName = base.Columns["WorkingName"];
                this.columnShortName = base.Columns["ShortName"];
                this.columnOldSwMessage = base.Columns["OldSwMessage"];
                this.columnOldSwMessageActive = base.Columns["OldSwMessageActive"];
                this.columnOldModelMessage = base.Columns["OldModelMessage"];
                this.columnOldModelMessageActive = base.Columns["OldModelMessageActive"];
                this.columnAutoAdd = base.Columns["AutoAdd"];
                this.columnApproved = base.Columns["Approved"];
                this.columnPhoneImage = base.Columns["PhoneImage"];
                this.columnPhoneImageURL = base.Columns["PhoneImageURL"];
                this.columnChipset = base.Columns["Chipset"];
                this.columnComment = base.Columns["Comment"];
                this.columnInsertTS = base.Columns["InsertTS"];
                this.columnEditTS = base.Columns["EditTS"];
                this.columnInsertSemcId = base.Columns["InsertSemcId"];
                this.columnEditSemcId = base.Columns["EditSemcId"];
                this.columnCluster = base.Columns["Cluster"];
                this.columnEmmaSwFsTemplate = base.Columns["EmmaSwFsTemplate"];
                this.columnEmmaSwFsCdaTemplate = base.Columns["EmmaSwFsCdaTemplate"];
                this.columnEmmaSwDeltaTemplate = base.Columns["EmmaSwDeltaTemplate"];
                this.columnPlatform = base.Columns["Platform"];
                this.columnMother = base.Columns["Mother"];
                this.columnSWRRatRTL = base.Columns["SWRRatRTL"];
                this.columnPBU_ID = base.Columns["PBU_ID"];
                this.columnTrueUserResponsibleUserID = base.Columns["TrueUserResponsibleUserID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPhoneModel_Id = new global::System.Data.DataColumn("PhoneModel_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneModel_Id);
                this.columnOffName = new global::System.Data.DataColumn("OffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffName);
                this.columnWorkingName = new global::System.Data.DataColumn("WorkingName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkingName);
                this.columnShortName = new global::System.Data.DataColumn("ShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortName);
                this.columnOldSwMessage = new global::System.Data.DataColumn("OldSwMessage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldSwMessage);
                this.columnOldSwMessageActive = new global::System.Data.DataColumn("OldSwMessageActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldSwMessageActive);
                this.columnOldModelMessage = new global::System.Data.DataColumn("OldModelMessage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldModelMessage);
                this.columnOldModelMessageActive = new global::System.Data.DataColumn("OldModelMessageActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldModelMessageActive);
                this.columnAutoAdd = new global::System.Data.DataColumn("AutoAdd", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoAdd);
                this.columnApproved = new global::System.Data.DataColumn("Approved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproved);
                this.columnPhoneImage = new global::System.Data.DataColumn("PhoneImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneImage);
                this.columnPhoneImageURL = new global::System.Data.DataColumn("PhoneImageURL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneImageURL);
                this.columnChipset = new global::System.Data.DataColumn("Chipset", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChipset);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnInsertTS = new global::System.Data.DataColumn("InsertTS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertTS);
                this.columnEditTS = new global::System.Data.DataColumn("EditTS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEditTS);
                this.columnInsertSemcId = new global::System.Data.DataColumn("InsertSemcId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertSemcId);
                this.columnEditSemcId = new global::System.Data.DataColumn("EditSemcId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEditSemcId);
                this.columnCluster = new global::System.Data.DataColumn("Cluster", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCluster);
                this.columnEmmaSwFsTemplate = new global::System.Data.DataColumn("EmmaSwFsTemplate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmmaSwFsTemplate);
                this.columnEmmaSwFsCdaTemplate = new global::System.Data.DataColumn("EmmaSwFsCdaTemplate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmmaSwFsCdaTemplate);
                this.columnEmmaSwDeltaTemplate = new global::System.Data.DataColumn("EmmaSwDeltaTemplate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmmaSwDeltaTemplate);
                this.columnPlatform = new global::System.Data.DataColumn("Platform", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatform);
                this.columnMother = new global::System.Data.DataColumn("Mother", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMother);
                this.columnSWRRatRTL = new global::System.Data.DataColumn("SWRRatRTL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWRRatRTL);
                this.columnPBU_ID = new global::System.Data.DataColumn("PBU_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPBU_ID);
                this.columnTrueUserResponsibleUserID = new global::System.Data.DataColumn("TrueUserResponsibleUserID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrueUserResponsibleUserID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPhoneModel_Id}, true));
                this.columnPhoneModel_Id.AutoIncrement = true;
                this.columnPhoneModel_Id.AutoIncrementSeed = -1;
                this.columnPhoneModel_Id.AutoIncrementStep = -1;
                this.columnPhoneModel_Id.AllowDBNull = false;
                this.columnPhoneModel_Id.ReadOnly = true;
                this.columnPhoneModel_Id.Unique = true;
                this.columnOffName.MaxLength = 50;
                this.columnWorkingName.MaxLength = 50;
                this.columnShortName.AllowDBNull = false;
                this.columnShortName.MaxLength = 50;
                this.columnOldSwMessage.MaxLength = 200;
                this.columnOldSwMessageActive.AllowDBNull = false;
                this.columnOldModelMessage.MaxLength = 200;
                this.columnOldModelMessageActive.AllowDBNull = false;
                this.columnAutoAdd.AllowDBNull = false;
                this.columnApproved.AllowDBNull = false;
                this.columnPhoneImageURL.AllowDBNull = false;
                this.columnPhoneImageURL.MaxLength = 100;
                this.columnChipset.MaxLength = 10;
                this.columnComment.MaxLength = 50;
                this.columnInsertTS.AllowDBNull = false;
                this.columnInsertSemcId.AllowDBNull = false;
                this.columnInsertSemcId.MaxLength = 50;
                this.columnEditSemcId.MaxLength = 50;
                this.columnCluster.MaxLength = 50;
                this.columnEmmaSwFsTemplate.MaxLength = 255;
                this.columnEmmaSwFsCdaTemplate.MaxLength = 255;
                this.columnEmmaSwDeltaTemplate.MaxLength = 255;
                this.columnPlatform.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPhoneModelRow NewtblPhoneModelRow() {
                return ((tblPhoneModelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblPhoneModelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblPhoneModelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblPhoneModelRowChanged != null)) {
                    this.tblPhoneModelRowChanged(this, new tblPhoneModelRowChangeEvent(((tblPhoneModelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblPhoneModelRowChanging != null)) {
                    this.tblPhoneModelRowChanging(this, new tblPhoneModelRowChangeEvent(((tblPhoneModelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblPhoneModelRowDeleted != null)) {
                    this.tblPhoneModelRowDeleted(this, new tblPhoneModelRowChangeEvent(((tblPhoneModelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblPhoneModelRowDeleting != null)) {
                    this.tblPhoneModelRowDeleting(this, new tblPhoneModelRowChangeEvent(((tblPhoneModelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblPhoneModelRow(tblPhoneModelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MTBF ds = new MTBF();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblPhoneModelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblCrashLinkDataTable : global::System.Data.TypedTableBase<tblCrashLinkRow> {
            
            private global::System.Data.DataColumn columnCrashLink_id;
            
            private global::System.Data.DataColumn columnPhoneTrans_id;
            
            private global::System.Data.DataColumn columnCrashLink;
            
            private global::System.Data.DataColumn columnIsvisible;
            
            private global::System.Data.DataColumn columnIsSuccessful;
            
            private global::System.Data.DataColumn columnPhoneModel_Id;
            
            private global::System.Data.DataColumn columnWorkingname;
            
            private global::System.Data.DataColumn columnSw1Revision;
            
            private global::System.Data.DataColumn columnLogName;
            
            private global::System.Data.DataColumn columnDeliverTime;
            
            private global::System.Data.DataColumn columnMatchdate;
            
            private global::System.Data.DataColumn columnLogType;
            
            private global::System.Data.DataColumn columnIsLUT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCrashLinkDataTable() {
                this.TableName = "tblCrashLink";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblCrashLinkDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblCrashLinkDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CrashLink_idColumn {
                get {
                    return this.columnCrashLink_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneTrans_idColumn {
                get {
                    return this.columnPhoneTrans_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CrashLinkColumn {
                get {
                    return this.columnCrashLink;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsvisibleColumn {
                get {
                    return this.columnIsvisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsSuccessfulColumn {
                get {
                    return this.columnIsSuccessful;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneModel_IdColumn {
                get {
                    return this.columnPhoneModel_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkingnameColumn {
                get {
                    return this.columnWorkingname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sw1RevisionColumn {
                get {
                    return this.columnSw1Revision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogNameColumn {
                get {
                    return this.columnLogName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliverTimeColumn {
                get {
                    return this.columnDeliverTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MatchdateColumn {
                get {
                    return this.columnMatchdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogTypeColumn {
                get {
                    return this.columnLogType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsLUTColumn {
                get {
                    return this.columnIsLUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCrashLinkRow this[int index] {
                get {
                    return ((tblCrashLinkRow)(this.Rows[index]));
                }
            }
            
            public event tblCrashLinkRowChangeEventHandler tblCrashLinkRowChanging;
            
            public event tblCrashLinkRowChangeEventHandler tblCrashLinkRowChanged;
            
            public event tblCrashLinkRowChangeEventHandler tblCrashLinkRowDeleting;
            
            public event tblCrashLinkRowChangeEventHandler tblCrashLinkRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblCrashLinkRow(tblCrashLinkRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCrashLinkRow AddtblCrashLinkRow(long PhoneTrans_id, string CrashLink, bool Isvisible, bool IsSuccessful, long PhoneModel_Id, string Workingname, string Sw1Revision, string LogName, System.DateTime DeliverTime, System.DateTime Matchdate, string LogType, bool IsLUT) {
                tblCrashLinkRow rowtblCrashLinkRow = ((tblCrashLinkRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PhoneTrans_id,
                        CrashLink,
                        Isvisible,
                        IsSuccessful,
                        PhoneModel_Id,
                        Workingname,
                        Sw1Revision,
                        LogName,
                        DeliverTime,
                        Matchdate,
                        LogType,
                        IsLUT};
                rowtblCrashLinkRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblCrashLinkRow);
                return rowtblCrashLinkRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCrashLinkRow FindByCrashLink_id(long CrashLink_id) {
                return ((tblCrashLinkRow)(this.Rows.Find(new object[] {
                            CrashLink_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblCrashLinkDataTable cln = ((tblCrashLinkDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblCrashLinkDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCrashLink_id = base.Columns["CrashLink_id"];
                this.columnPhoneTrans_id = base.Columns["PhoneTrans_id"];
                this.columnCrashLink = base.Columns["CrashLink"];
                this.columnIsvisible = base.Columns["Isvisible"];
                this.columnIsSuccessful = base.Columns["IsSuccessful"];
                this.columnPhoneModel_Id = base.Columns["PhoneModel_Id"];
                this.columnWorkingname = base.Columns["Workingname"];
                this.columnSw1Revision = base.Columns["Sw1Revision"];
                this.columnLogName = base.Columns["LogName"];
                this.columnDeliverTime = base.Columns["DeliverTime"];
                this.columnMatchdate = base.Columns["Matchdate"];
                this.columnLogType = base.Columns["LogType"];
                this.columnIsLUT = base.Columns["IsLUT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCrashLink_id = new global::System.Data.DataColumn("CrashLink_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrashLink_id);
                this.columnPhoneTrans_id = new global::System.Data.DataColumn("PhoneTrans_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneTrans_id);
                this.columnCrashLink = new global::System.Data.DataColumn("CrashLink", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrashLink);
                this.columnIsvisible = new global::System.Data.DataColumn("Isvisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsvisible);
                this.columnIsSuccessful = new global::System.Data.DataColumn("IsSuccessful", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSuccessful);
                this.columnPhoneModel_Id = new global::System.Data.DataColumn("PhoneModel_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneModel_Id);
                this.columnWorkingname = new global::System.Data.DataColumn("Workingname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkingname);
                this.columnSw1Revision = new global::System.Data.DataColumn("Sw1Revision", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSw1Revision);
                this.columnLogName = new global::System.Data.DataColumn("LogName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogName);
                this.columnDeliverTime = new global::System.Data.DataColumn("DeliverTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliverTime);
                this.columnMatchdate = new global::System.Data.DataColumn("Matchdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatchdate);
                this.columnLogType = new global::System.Data.DataColumn("LogType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogType);
                this.columnIsLUT = new global::System.Data.DataColumn("IsLUT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsLUT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCrashLink_id}, true));
                this.columnCrashLink_id.AutoIncrement = true;
                this.columnCrashLink_id.AutoIncrementSeed = -1;
                this.columnCrashLink_id.AutoIncrementStep = -1;
                this.columnCrashLink_id.AllowDBNull = false;
                this.columnCrashLink_id.ReadOnly = true;
                this.columnCrashLink_id.Unique = true;
                this.columnPhoneTrans_id.AllowDBNull = false;
                this.columnCrashLink.MaxLength = 800;
                this.columnIsvisible.AllowDBNull = false;
                this.columnIsSuccessful.AllowDBNull = false;
                this.columnWorkingname.MaxLength = 255;
                this.columnSw1Revision.MaxLength = 255;
                this.columnLogName.MaxLength = 255;
                this.columnLogType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCrashLinkRow NewtblCrashLinkRow() {
                return ((tblCrashLinkRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblCrashLinkRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblCrashLinkRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblCrashLinkRowChanged != null)) {
                    this.tblCrashLinkRowChanged(this, new tblCrashLinkRowChangeEvent(((tblCrashLinkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblCrashLinkRowChanging != null)) {
                    this.tblCrashLinkRowChanging(this, new tblCrashLinkRowChangeEvent(((tblCrashLinkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblCrashLinkRowDeleted != null)) {
                    this.tblCrashLinkRowDeleted(this, new tblCrashLinkRowChangeEvent(((tblCrashLinkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblCrashLinkRowDeleting != null)) {
                    this.tblCrashLinkRowDeleting(this, new tblCrashLinkRowChangeEvent(((tblCrashLinkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblCrashLinkRow(tblCrashLinkRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MTBF ds = new MTBF();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblCrashLinkDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblPhoneModelRow : global::System.Data.DataRow {
            
            private tblPhoneModelDataTable tabletblPhoneModel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblPhoneModelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblPhoneModel = ((tblPhoneModelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PhoneModel_Id {
                get {
                    return ((long)(this[this.tabletblPhoneModel.PhoneModel_IdColumn]));
                }
                set {
                    this[this.tabletblPhoneModel.PhoneModel_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OffName {
                get {
                    try {
                        return ((string)(this[this.tabletblPhoneModel.OffNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OffName\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.OffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkingName {
                get {
                    try {
                        return ((string)(this[this.tabletblPhoneModel.WorkingNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkingName\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.WorkingNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShortName {
                get {
                    return ((string)(this[this.tabletblPhoneModel.ShortNameColumn]));
                }
                set {
                    this[this.tabletblPhoneModel.ShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OldSwMessage {
                get {
                    try {
                        return ((string)(this[this.tabletblPhoneModel.OldSwMessageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldSwMessage\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.OldSwMessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool OldSwMessageActive {
                get {
                    return ((bool)(this[this.tabletblPhoneModel.OldSwMessageActiveColumn]));
                }
                set {
                    this[this.tabletblPhoneModel.OldSwMessageActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OldModelMessage {
                get {
                    try {
                        return ((string)(this[this.tabletblPhoneModel.OldModelMessageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldModelMessage\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.OldModelMessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool OldModelMessageActive {
                get {
                    return ((bool)(this[this.tabletblPhoneModel.OldModelMessageActiveColumn]));
                }
                set {
                    this[this.tabletblPhoneModel.OldModelMessageActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AutoAdd {
                get {
                    return ((bool)(this[this.tabletblPhoneModel.AutoAddColumn]));
                }
                set {
                    this[this.tabletblPhoneModel.AutoAddColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Approved {
                get {
                    return ((bool)(this[this.tabletblPhoneModel.ApprovedColumn]));
                }
                set {
                    this[this.tabletblPhoneModel.ApprovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] PhoneImage {
                get {
                    try {
                        return ((byte[])(this[this.tabletblPhoneModel.PhoneImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneImage\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.PhoneImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneImageURL {
                get {
                    return ((string)(this[this.tabletblPhoneModel.PhoneImageURLColumn]));
                }
                set {
                    this[this.tabletblPhoneModel.PhoneImageURLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Chipset {
                get {
                    try {
                        return ((string)(this[this.tabletblPhoneModel.ChipsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chipset\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.ChipsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tabletblPhoneModel.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertTS {
                get {
                    return ((global::System.DateTime)(this[this.tabletblPhoneModel.InsertTSColumn]));
                }
                set {
                    this[this.tabletblPhoneModel.InsertTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EditTS {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblPhoneModel.EditTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EditTS\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.EditTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsertSemcId {
                get {
                    return ((string)(this[this.tabletblPhoneModel.InsertSemcIdColumn]));
                }
                set {
                    this[this.tabletblPhoneModel.InsertSemcIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EditSemcId {
                get {
                    try {
                        return ((string)(this[this.tabletblPhoneModel.EditSemcIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EditSemcId\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.EditSemcIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cluster {
                get {
                    try {
                        return ((string)(this[this.tabletblPhoneModel.ClusterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cluster\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.ClusterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmmaSwFsTemplate {
                get {
                    try {
                        return ((string)(this[this.tabletblPhoneModel.EmmaSwFsTemplateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmmaSwFsTemplate\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.EmmaSwFsTemplateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmmaSwFsCdaTemplate {
                get {
                    try {
                        return ((string)(this[this.tabletblPhoneModel.EmmaSwFsCdaTemplateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmmaSwFsCdaTemplate\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.EmmaSwFsCdaTemplateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmmaSwDeltaTemplate {
                get {
                    try {
                        return ((string)(this[this.tabletblPhoneModel.EmmaSwDeltaTemplateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmmaSwDeltaTemplate\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.EmmaSwDeltaTemplateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Platform {
                get {
                    try {
                        return ((string)(this[this.tabletblPhoneModel.PlatformColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Platform\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.PlatformColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Mother {
                get {
                    try {
                        return ((bool)(this[this.tabletblPhoneModel.MotherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mother\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.MotherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SWRRatRTL {
                get {
                    try {
                        return ((decimal)(this[this.tabletblPhoneModel.SWRRatRTLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SWRRatRTL\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.SWRRatRTLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PBU_ID {
                get {
                    try {
                        return ((long)(this[this.tabletblPhoneModel.PBU_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PBU_ID\' in table \'tblPhoneModel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.PBU_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TrueUserResponsibleUserID {
                get {
                    try {
                        return ((long)(this[this.tabletblPhoneModel.TrueUserResponsibleUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrueUserResponsibleUserID\' in table \'tblPhoneModel\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabletblPhoneModel.TrueUserResponsibleUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOffNameNull() {
                return this.IsNull(this.tabletblPhoneModel.OffNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOffNameNull() {
                this[this.tabletblPhoneModel.OffNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkingNameNull() {
                return this.IsNull(this.tabletblPhoneModel.WorkingNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkingNameNull() {
                this[this.tabletblPhoneModel.WorkingNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldSwMessageNull() {
                return this.IsNull(this.tabletblPhoneModel.OldSwMessageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldSwMessageNull() {
                this[this.tabletblPhoneModel.OldSwMessageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldModelMessageNull() {
                return this.IsNull(this.tabletblPhoneModel.OldModelMessageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldModelMessageNull() {
                this[this.tabletblPhoneModel.OldModelMessageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneImageNull() {
                return this.IsNull(this.tabletblPhoneModel.PhoneImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneImageNull() {
                this[this.tabletblPhoneModel.PhoneImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChipsetNull() {
                return this.IsNull(this.tabletblPhoneModel.ChipsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChipsetNull() {
                this[this.tabletblPhoneModel.ChipsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tabletblPhoneModel.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tabletblPhoneModel.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEditTSNull() {
                return this.IsNull(this.tabletblPhoneModel.EditTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEditTSNull() {
                this[this.tabletblPhoneModel.EditTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEditSemcIdNull() {
                return this.IsNull(this.tabletblPhoneModel.EditSemcIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEditSemcIdNull() {
                this[this.tabletblPhoneModel.EditSemcIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClusterNull() {
                return this.IsNull(this.tabletblPhoneModel.ClusterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClusterNull() {
                this[this.tabletblPhoneModel.ClusterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmmaSwFsTemplateNull() {
                return this.IsNull(this.tabletblPhoneModel.EmmaSwFsTemplateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmmaSwFsTemplateNull() {
                this[this.tabletblPhoneModel.EmmaSwFsTemplateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmmaSwFsCdaTemplateNull() {
                return this.IsNull(this.tabletblPhoneModel.EmmaSwFsCdaTemplateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmmaSwFsCdaTemplateNull() {
                this[this.tabletblPhoneModel.EmmaSwFsCdaTemplateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmmaSwDeltaTemplateNull() {
                return this.IsNull(this.tabletblPhoneModel.EmmaSwDeltaTemplateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmmaSwDeltaTemplateNull() {
                this[this.tabletblPhoneModel.EmmaSwDeltaTemplateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlatformNull() {
                return this.IsNull(this.tabletblPhoneModel.PlatformColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlatformNull() {
                this[this.tabletblPhoneModel.PlatformColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMotherNull() {
                return this.IsNull(this.tabletblPhoneModel.MotherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMotherNull() {
                this[this.tabletblPhoneModel.MotherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSWRRatRTLNull() {
                return this.IsNull(this.tabletblPhoneModel.SWRRatRTLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSWRRatRTLNull() {
                this[this.tabletblPhoneModel.SWRRatRTLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPBU_IDNull() {
                return this.IsNull(this.tabletblPhoneModel.PBU_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPBU_IDNull() {
                this[this.tabletblPhoneModel.PBU_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrueUserResponsibleUserIDNull() {
                return this.IsNull(this.tabletblPhoneModel.TrueUserResponsibleUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrueUserResponsibleUserIDNull() {
                this[this.tabletblPhoneModel.TrueUserResponsibleUserIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblCrashLinkRow : global::System.Data.DataRow {
            
            private tblCrashLinkDataTable tabletblCrashLink;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblCrashLinkRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblCrashLink = ((tblCrashLinkDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CrashLink_id {
                get {
                    return ((long)(this[this.tabletblCrashLink.CrashLink_idColumn]));
                }
                set {
                    this[this.tabletblCrashLink.CrashLink_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PhoneTrans_id {
                get {
                    return ((long)(this[this.tabletblCrashLink.PhoneTrans_idColumn]));
                }
                set {
                    this[this.tabletblCrashLink.PhoneTrans_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CrashLink {
                get {
                    try {
                        return ((string)(this[this.tabletblCrashLink.CrashLinkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CrashLink\' in table \'tblCrashLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCrashLink.CrashLinkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvisible {
                get {
                    return ((bool)(this[this.tabletblCrashLink.IsvisibleColumn]));
                }
                set {
                    this[this.tabletblCrashLink.IsvisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuccessful {
                get {
                    return ((bool)(this[this.tabletblCrashLink.IsSuccessfulColumn]));
                }
                set {
                    this[this.tabletblCrashLink.IsSuccessfulColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PhoneModel_Id {
                get {
                    try {
                        return ((long)(this[this.tabletblCrashLink.PhoneModel_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneModel_Id\' in table \'tblCrashLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCrashLink.PhoneModel_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Workingname {
                get {
                    try {
                        return ((string)(this[this.tabletblCrashLink.WorkingnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Workingname\' in table \'tblCrashLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCrashLink.WorkingnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sw1Revision {
                get {
                    try {
                        return ((string)(this[this.tabletblCrashLink.Sw1RevisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sw1Revision\' in table \'tblCrashLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCrashLink.Sw1RevisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LogName {
                get {
                    try {
                        return ((string)(this[this.tabletblCrashLink.LogNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogName\' in table \'tblCrashLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCrashLink.LogNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeliverTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblCrashLink.DeliverTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliverTime\' in table \'tblCrashLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCrashLink.DeliverTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Matchdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblCrashLink.MatchdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Matchdate\' in table \'tblCrashLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCrashLink.MatchdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LogType {
                get {
                    try {
                        return ((string)(this[this.tabletblCrashLink.LogTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogType\' in table \'tblCrashLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCrashLink.LogTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLUT {
                get {
                    try {
                        return ((bool)(this[this.tabletblCrashLink.IsLUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsLUT\' in table \'tblCrashLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCrashLink.IsLUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrashLinkNull() {
                return this.IsNull(this.tabletblCrashLink.CrashLinkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrashLinkNull() {
                this[this.tabletblCrashLink.CrashLinkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneModel_IdNull() {
                return this.IsNull(this.tabletblCrashLink.PhoneModel_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneModel_IdNull() {
                this[this.tabletblCrashLink.PhoneModel_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkingnameNull() {
                return this.IsNull(this.tabletblCrashLink.WorkingnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkingnameNull() {
                this[this.tabletblCrashLink.WorkingnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSw1RevisionNull() {
                return this.IsNull(this.tabletblCrashLink.Sw1RevisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSw1RevisionNull() {
                this[this.tabletblCrashLink.Sw1RevisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogNameNull() {
                return this.IsNull(this.tabletblCrashLink.LogNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogNameNull() {
                this[this.tabletblCrashLink.LogNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliverTimeNull() {
                return this.IsNull(this.tabletblCrashLink.DeliverTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliverTimeNull() {
                this[this.tabletblCrashLink.DeliverTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMatchdateNull() {
                return this.IsNull(this.tabletblCrashLink.MatchdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMatchdateNull() {
                this[this.tabletblCrashLink.MatchdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogTypeNull() {
                return this.IsNull(this.tabletblCrashLink.LogTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogTypeNull() {
                this[this.tabletblCrashLink.LogTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsLUTNull() {
                return this.IsNull(this.tabletblCrashLink.IsLUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsLUTNull() {
                this[this.tabletblCrashLink.IsLUTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblPhoneModelRowChangeEvent : global::System.EventArgs {
            
            private tblPhoneModelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPhoneModelRowChangeEvent(tblPhoneModelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPhoneModelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblCrashLinkRowChangeEvent : global::System.EventArgs {
            
            private tblCrashLinkRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCrashLinkRowChangeEvent(tblCrashLinkRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCrashLinkRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SEMC.CrashLink.BackgroudService.MTBFTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblPhoneModelTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblPhoneModelTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblPhoneModel";
            tableMapping.ColumnMappings.Add("PhoneModel_Id", "PhoneModel_Id");
            tableMapping.ColumnMappings.Add("OffName", "OffName");
            tableMapping.ColumnMappings.Add("WorkingName", "WorkingName");
            tableMapping.ColumnMappings.Add("ShortName", "ShortName");
            tableMapping.ColumnMappings.Add("OldSwMessage", "OldSwMessage");
            tableMapping.ColumnMappings.Add("OldSwMessageActive", "OldSwMessageActive");
            tableMapping.ColumnMappings.Add("OldModelMessage", "OldModelMessage");
            tableMapping.ColumnMappings.Add("OldModelMessageActive", "OldModelMessageActive");
            tableMapping.ColumnMappings.Add("AutoAdd", "AutoAdd");
            tableMapping.ColumnMappings.Add("Approved", "Approved");
            tableMapping.ColumnMappings.Add("PhoneImage", "PhoneImage");
            tableMapping.ColumnMappings.Add("PhoneImageURL", "PhoneImageURL");
            tableMapping.ColumnMappings.Add("Chipset", "Chipset");
            tableMapping.ColumnMappings.Add("Comment", "Comment");
            tableMapping.ColumnMappings.Add("InsertTS", "InsertTS");
            tableMapping.ColumnMappings.Add("EditTS", "EditTS");
            tableMapping.ColumnMappings.Add("InsertSemcId", "InsertSemcId");
            tableMapping.ColumnMappings.Add("EditSemcId", "EditSemcId");
            tableMapping.ColumnMappings.Add("Cluster", "Cluster");
            tableMapping.ColumnMappings.Add("EmmaSwFsTemplate", "EmmaSwFsTemplate");
            tableMapping.ColumnMappings.Add("EmmaSwFsCdaTemplate", "EmmaSwFsCdaTemplate");
            tableMapping.ColumnMappings.Add("EmmaSwDeltaTemplate", "EmmaSwDeltaTemplate");
            tableMapping.ColumnMappings.Add("Platform", "Platform");
            tableMapping.ColumnMappings.Add("Mother", "Mother");
            tableMapping.ColumnMappings.Add("SWRRatRTL", "SWRRatRTL");
            tableMapping.ColumnMappings.Add("PBU_ID", "PBU_ID");
            tableMapping.ColumnMappings.Add("TrueUserResponsibleUserID", "TrueUserResponsibleUserID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tblPhoneModel] WHERE (([PhoneModel_Id] = @Original_PhoneModel_" +
                "Id) AND ((@IsNull_OffName = 1 AND [OffName] IS NULL) OR ([OffName] = @Original_O" +
                "ffName)) AND ((@IsNull_WorkingName = 1 AND [WorkingName] IS NULL) OR ([WorkingNa" +
                "me] = @Original_WorkingName)) AND ([ShortName] = @Original_ShortName) AND ((@IsN" +
                "ull_OldSwMessage = 1 AND [OldSwMessage] IS NULL) OR ([OldSwMessage] = @Original_" +
                "OldSwMessage)) AND ([OldSwMessageActive] = @Original_OldSwMessageActive) AND ((@" +
                "IsNull_OldModelMessage = 1 AND [OldModelMessage] IS NULL) OR ([OldModelMessage] " +
                "= @Original_OldModelMessage)) AND ([OldModelMessageActive] = @Original_OldModelM" +
                "essageActive) AND ([AutoAdd] = @Original_AutoAdd) AND ([Approved] = @Original_Ap" +
                "proved) AND ((@IsNull_PhoneImage = 1 AND [PhoneImage] IS NULL) OR ([PhoneImage] " +
                "= @Original_PhoneImage)) AND ([PhoneImageURL] = @Original_PhoneImageURL) AND ((@" +
                "IsNull_Chipset = 1 AND [Chipset] IS NULL) OR ([Chipset] = @Original_Chipset)) AN" +
                "D ((@IsNull_Comment = 1 AND [Comment] IS NULL) OR ([Comment] = @Original_Comment" +
                ")) AND ([InsertTS] = @Original_InsertTS) AND ((@IsNull_EditTS = 1 AND [EditTS] I" +
                "S NULL) OR ([EditTS] = @Original_EditTS)) AND ([InsertSemcId] = @Original_Insert" +
                "SemcId) AND ((@IsNull_EditSemcId = 1 AND [EditSemcId] IS NULL) OR ([EditSemcId] " +
                "= @Original_EditSemcId)) AND ((@IsNull_Cluster = 1 AND [Cluster] IS NULL) OR ([C" +
                "luster] = @Original_Cluster)) AND ((@IsNull_EmmaSwFsTemplate = 1 AND [EmmaSwFsTe" +
                "mplate] IS NULL) OR ([EmmaSwFsTemplate] = @Original_EmmaSwFsTemplate)) AND ((@Is" +
                "Null_EmmaSwFsCdaTemplate = 1 AND [EmmaSwFsCdaTemplate] IS NULL) OR ([EmmaSwFsCda" +
                "Template] = @Original_EmmaSwFsCdaTemplate)) AND ((@IsNull_EmmaSwDeltaTemplate = " +
                "1 AND [EmmaSwDeltaTemplate] IS NULL) OR ([EmmaSwDeltaTemplate] = @Original_EmmaS" +
                "wDeltaTemplate)) AND ((@IsNull_Platform = 1 AND [Platform] IS NULL) OR ([Platfor" +
                "m] = @Original_Platform)) AND ((@IsNull_Mother = 1 AND [Mother] IS NULL) OR ([Mo" +
                "ther] = @Original_Mother)) AND ((@IsNull_SWRRatRTL = 1 AND [SWRRatRTL] IS NULL) " +
                "OR ([SWRRatRTL] = @Original_SWRRatRTL)) AND ((@IsNull_PBU_ID = 1 AND [PBU_ID] IS" +
                " NULL) OR ([PBU_ID] = @Original_PBU_ID)) AND ((@IsNull_TrueUserResponsibleUserID" +
                " = 1 AND [TrueUserResponsibleUserID] IS NULL) OR ([TrueUserResponsibleUserID] = " +
                "@Original_TrueUserResponsibleUserID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneModel_Id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneModel_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OffName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OffName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OffName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OffName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WorkingName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkingName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkingName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkingName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShortName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OldSwMessage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSwMessage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OldSwMessage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSwMessage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OldSwMessageActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSwMessageActive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OldModelMessage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldModelMessage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OldModelMessage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldModelMessage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OldModelMessageActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldModelMessageActive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AutoAdd", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutoAdd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Approved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhoneImage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneImage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneImage", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneImage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneImageURL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneImageURL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Chipset", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chipset", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Chipset", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chipset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertTS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EditTS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditTS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EditTS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditTS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertSemcId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertSemcId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EditSemcId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditSemcId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EditSemcId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditSemcId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cluster", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cluster", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cluster", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cluster", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmmaSwFsTemplate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwFsTemplate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmmaSwFsTemplate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwFsTemplate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmmaSwFsCdaTemplate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwFsCdaTemplate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmmaSwFsCdaTemplate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwFsCdaTemplate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmmaSwDeltaTemplate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwDeltaTemplate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmmaSwDeltaTemplate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwDeltaTemplate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Platform", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Platform", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Platform", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Platform", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mother", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mother", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mother", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mother", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SWRRatRTL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SWRRatRTL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SWRRatRTL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "SWRRatRTL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PBU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PBU_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PBU_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PBU_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrueUserResponsibleUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrueUserResponsibleUserID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrueUserResponsibleUserID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrueUserResponsibleUserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[tblPhoneModel] ([OffName], [WorkingName], [ShortName], [OldSwMessage], [OldSwMessageActive], [OldModelMessage], [OldModelMessageActive], [AutoAdd], [Approved], [PhoneImage], [PhoneImageURL], [Chipset], [Comment], [InsertTS], [EditTS], [InsertSemcId], [EditSemcId], [Cluster], [EmmaSwFsTemplate], [EmmaSwFsCdaTemplate], [EmmaSwDeltaTemplate], [Platform], [Mother], [SWRRatRTL], [PBU_ID], [TrueUserResponsibleUserID]) VALUES (@OffName, @WorkingName, @ShortName, @OldSwMessage, @OldSwMessageActive, @OldModelMessage, @OldModelMessageActive, @AutoAdd, @Approved, @PhoneImage, @PhoneImageURL, @Chipset, @Comment, @InsertTS, @EditTS, @InsertSemcId, @EditSemcId, @Cluster, @EmmaSwFsTemplate, @EmmaSwFsCdaTemplate, @EmmaSwDeltaTemplate, @Platform, @Mother, @SWRRatRTL, @PBU_ID, @TrueUserResponsibleUserID);
SELECT PhoneModel_Id, OffName, WorkingName, ShortName, OldSwMessage, OldSwMessageActive, OldModelMessage, OldModelMessageActive, AutoAdd, Approved, PhoneImage, PhoneImageURL, Chipset, Comment, InsertTS, EditTS, InsertSemcId, EditSemcId, Cluster, EmmaSwFsTemplate, EmmaSwFsCdaTemplate, EmmaSwDeltaTemplate, Platform, Mother, SWRRatRTL, PBU_ID, TrueUserResponsibleUserID FROM tblPhoneModel WHERE (PhoneModel_Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OffName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OffName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkingName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkingName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShortName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldSwMessage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSwMessage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldSwMessageActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSwMessageActive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldModelMessage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldModelMessage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldModelMessageActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldModelMessageActive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutoAdd", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutoAdd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Approved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneImage", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneImage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneImageURL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneImageURL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chipset", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chipset", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertTS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EditTS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertSemcId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertSemcId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EditSemcId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditSemcId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cluster", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cluster", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmmaSwFsTemplate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwFsTemplate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmmaSwFsCdaTemplate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwFsCdaTemplate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmmaSwDeltaTemplate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwDeltaTemplate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Platform", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Platform", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mother", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mother", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SWRRatRTL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "SWRRatRTL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBU_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PBU_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrueUserResponsibleUserID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrueUserResponsibleUserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tblPhoneModel] SET [OffName] = @OffName, [WorkingName] = @WorkingNa" +
                "me, [ShortName] = @ShortName, [OldSwMessage] = @OldSwMessage, [OldSwMessageActiv" +
                "e] = @OldSwMessageActive, [OldModelMessage] = @OldModelMessage, [OldModelMessage" +
                "Active] = @OldModelMessageActive, [AutoAdd] = @AutoAdd, [Approved] = @Approved, " +
                "[PhoneImage] = @PhoneImage, [PhoneImageURL] = @PhoneImageURL, [Chipset] = @Chips" +
                "et, [Comment] = @Comment, [InsertTS] = @InsertTS, [EditTS] = @EditTS, [InsertSem" +
                "cId] = @InsertSemcId, [EditSemcId] = @EditSemcId, [Cluster] = @Cluster, [EmmaSwF" +
                "sTemplate] = @EmmaSwFsTemplate, [EmmaSwFsCdaTemplate] = @EmmaSwFsCdaTemplate, [E" +
                "mmaSwDeltaTemplate] = @EmmaSwDeltaTemplate, [Platform] = @Platform, [Mother] = @" +
                "Mother, [SWRRatRTL] = @SWRRatRTL, [PBU_ID] = @PBU_ID, [TrueUserResponsibleUserID" +
                "] = @TrueUserResponsibleUserID WHERE (([PhoneModel_Id] = @Original_PhoneModel_Id" +
                ") AND ((@IsNull_OffName = 1 AND [OffName] IS NULL) OR ([OffName] = @Original_Off" +
                "Name)) AND ((@IsNull_WorkingName = 1 AND [WorkingName] IS NULL) OR ([WorkingName" +
                "] = @Original_WorkingName)) AND ([ShortName] = @Original_ShortName) AND ((@IsNul" +
                "l_OldSwMessage = 1 AND [OldSwMessage] IS NULL) OR ([OldSwMessage] = @Original_Ol" +
                "dSwMessage)) AND ([OldSwMessageActive] = @Original_OldSwMessageActive) AND ((@Is" +
                "Null_OldModelMessage = 1 AND [OldModelMessage] IS NULL) OR ([OldModelMessage] = " +
                "@Original_OldModelMessage)) AND ([OldModelMessageActive] = @Original_OldModelMes" +
                "sageActive) AND ([AutoAdd] = @Original_AutoAdd) AND ([Approved] = @Original_Appr" +
                "oved) AND ((@IsNull_PhoneImage = 1 AND [PhoneImage] IS NULL) OR ([PhoneImage] = " +
                "@Original_PhoneImage)) AND ([PhoneImageURL] = @Original_PhoneImageURL) AND ((@Is" +
                "Null_Chipset = 1 AND [Chipset] IS NULL) OR ([Chipset] = @Original_Chipset)) AND " +
                "((@IsNull_Comment = 1 AND [Comment] IS NULL) OR ([Comment] = @Original_Comment))" +
                " AND ([InsertTS] = @Original_InsertTS) AND ((@IsNull_EditTS = 1 AND [EditTS] IS " +
                "NULL) OR ([EditTS] = @Original_EditTS)) AND ([InsertSemcId] = @Original_InsertSe" +
                "mcId) AND ((@IsNull_EditSemcId = 1 AND [EditSemcId] IS NULL) OR ([EditSemcId] = " +
                "@Original_EditSemcId)) AND ((@IsNull_Cluster = 1 AND [Cluster] IS NULL) OR ([Clu" +
                "ster] = @Original_Cluster)) AND ((@IsNull_EmmaSwFsTemplate = 1 AND [EmmaSwFsTemp" +
                "late] IS NULL) OR ([EmmaSwFsTemplate] = @Original_EmmaSwFsTemplate)) AND ((@IsNu" +
                "ll_EmmaSwFsCdaTemplate = 1 AND [EmmaSwFsCdaTemplate] IS NULL) OR ([EmmaSwFsCdaTe" +
                "mplate] = @Original_EmmaSwFsCdaTemplate)) AND ((@IsNull_EmmaSwDeltaTemplate = 1 " +
                "AND [EmmaSwDeltaTemplate] IS NULL) OR ([EmmaSwDeltaTemplate] = @Original_EmmaSwD" +
                "eltaTemplate)) AND ((@IsNull_Platform = 1 AND [Platform] IS NULL) OR ([Platform]" +
                " = @Original_Platform)) AND ((@IsNull_Mother = 1 AND [Mother] IS NULL) OR ([Moth" +
                "er] = @Original_Mother)) AND ((@IsNull_SWRRatRTL = 1 AND [SWRRatRTL] IS NULL) OR" +
                " ([SWRRatRTL] = @Original_SWRRatRTL)) AND ((@IsNull_PBU_ID = 1 AND [PBU_ID] IS N" +
                "ULL) OR ([PBU_ID] = @Original_PBU_ID)) AND ((@IsNull_TrueUserResponsibleUserID =" +
                " 1 AND [TrueUserResponsibleUserID] IS NULL) OR ([TrueUserResponsibleUserID] = @O" +
                "riginal_TrueUserResponsibleUserID)));\r\nSELECT PhoneModel_Id, OffName, WorkingNam" +
                "e, ShortName, OldSwMessage, OldSwMessageActive, OldModelMessage, OldModelMessage" +
                "Active, AutoAdd, Approved, PhoneImage, PhoneImageURL, Chipset, Comment, InsertTS" +
                ", EditTS, InsertSemcId, EditSemcId, Cluster, EmmaSwFsTemplate, EmmaSwFsCdaTempla" +
                "te, EmmaSwDeltaTemplate, Platform, Mother, SWRRatRTL, PBU_ID, TrueUserResponsibl" +
                "eUserID FROM tblPhoneModel WHERE (PhoneModel_Id = @PhoneModel_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OffName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OffName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkingName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkingName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShortName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldSwMessage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSwMessage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldSwMessageActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSwMessageActive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldModelMessage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldModelMessage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldModelMessageActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldModelMessageActive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutoAdd", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutoAdd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Approved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneImage", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneImage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneImageURL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneImageURL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chipset", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chipset", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertTS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EditTS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertSemcId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertSemcId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EditSemcId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditSemcId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cluster", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cluster", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmmaSwFsTemplate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwFsTemplate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmmaSwFsCdaTemplate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwFsCdaTemplate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmmaSwDeltaTemplate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwDeltaTemplate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Platform", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Platform", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mother", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mother", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SWRRatRTL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "SWRRatRTL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBU_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PBU_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrueUserResponsibleUserID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrueUserResponsibleUserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneModel_Id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneModel_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OffName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OffName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OffName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OffName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WorkingName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkingName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkingName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkingName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShortName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OldSwMessage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSwMessage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OldSwMessage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSwMessage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OldSwMessageActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSwMessageActive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OldModelMessage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldModelMessage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OldModelMessage", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldModelMessage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OldModelMessageActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldModelMessageActive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AutoAdd", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutoAdd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Approved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhoneImage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneImage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneImage", global::System.Data.SqlDbType.Binary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneImage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneImageURL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneImageURL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Chipset", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chipset", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Chipset", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chipset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertTS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EditTS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditTS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EditTS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditTS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertSemcId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertSemcId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EditSemcId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditSemcId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EditSemcId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EditSemcId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cluster", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cluster", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cluster", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cluster", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmmaSwFsTemplate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwFsTemplate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmmaSwFsTemplate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwFsTemplate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmmaSwFsCdaTemplate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwFsCdaTemplate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmmaSwFsCdaTemplate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwFsCdaTemplate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmmaSwDeltaTemplate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwDeltaTemplate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmmaSwDeltaTemplate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmmaSwDeltaTemplate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Platform", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Platform", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Platform", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Platform", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mother", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mother", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mother", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mother", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SWRRatRTL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SWRRatRTL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SWRRatRTL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "SWRRatRTL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PBU_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PBU_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PBU_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PBU_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrueUserResponsibleUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrueUserResponsibleUserID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrueUserResponsibleUserID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrueUserResponsibleUserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneModel_Id", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneModel_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SEMC.CrashLink.BackgroudService.Properties.Settings.Default.MtbfConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT PhoneModel_Id, OffName, WorkingName, ShortName, OldSwMessage, OldSwMessageActive, OldModelMessage, OldModelMessageActive, AutoAdd, Approved, PhoneImage, PhoneImageURL, Chipset, Comment, InsertTS, EditTS, InsertSemcId, EditSemcId, Cluster, EmmaSwFsTemplate, EmmaSwFsCdaTemplate, EmmaSwDeltaTemplate, Platform, Mother, SWRRatRTL, PBU_ID, TrueUserResponsibleUserID FROM dbo.tblPhoneModel";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MTBF.tblPhoneModelDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MTBF.tblPhoneModelDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MTBF.tblPhoneModelDataTable dataTable = new MTBF.tblPhoneModelDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MTBF.tblPhoneModelDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MTBF dataSet) {
            return this.Adapter.Update(dataSet, "tblPhoneModel");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    long Original_PhoneModel_Id, 
                    string Original_OffName, 
                    string Original_WorkingName, 
                    string Original_ShortName, 
                    string Original_OldSwMessage, 
                    bool Original_OldSwMessageActive, 
                    string Original_OldModelMessage, 
                    bool Original_OldModelMessageActive, 
                    bool Original_AutoAdd, 
                    bool Original_Approved, 
                    byte[] Original_PhoneImage, 
                    string Original_PhoneImageURL, 
                    string Original_Chipset, 
                    string Original_Comment, 
                    System.DateTime Original_InsertTS, 
                    global::System.Nullable<global::System.DateTime> Original_EditTS, 
                    string Original_InsertSemcId, 
                    string Original_EditSemcId, 
                    string Original_Cluster, 
                    string Original_EmmaSwFsTemplate, 
                    string Original_EmmaSwFsCdaTemplate, 
                    string Original_EmmaSwDeltaTemplate, 
                    string Original_Platform, 
                    global::System.Nullable<bool> Original_Mother, 
                    global::System.Nullable<decimal> Original_SWRRatRTL, 
                    global::System.Nullable<long> Original_PBU_ID, 
                    global::System.Nullable<long> Original_TrueUserResponsibleUserID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_PhoneModel_Id));
            if ((Original_OffName == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_OffName));
            }
            if ((Original_WorkingName == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_WorkingName));
            }
            if ((Original_ShortName == null)) {
                throw new global::System.ArgumentNullException("Original_ShortName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ShortName));
            }
            if ((Original_OldSwMessage == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_OldSwMessage));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_OldSwMessageActive));
            if ((Original_OldModelMessage == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_OldModelMessage));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_OldModelMessageActive));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_AutoAdd));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((bool)(Original_Approved));
            if ((Original_PhoneImage == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((byte[])(Original_PhoneImage));
            }
            if ((Original_PhoneImageURL == null)) {
                throw new global::System.ArgumentNullException("Original_PhoneImageURL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_PhoneImageURL));
            }
            if ((Original_Chipset == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Chipset));
            }
            if ((Original_Comment == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Comment));
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTime)(Original_InsertTS));
            if ((Original_EditTS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((System.DateTime)(Original_EditTS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_InsertSemcId == null)) {
                throw new global::System.ArgumentNullException("Original_InsertSemcId");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_InsertSemcId));
            }
            if ((Original_EditSemcId == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_EditSemcId));
            }
            if ((Original_Cluster == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_Cluster));
            }
            if ((Original_EmmaSwFsTemplate == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_EmmaSwFsTemplate));
            }
            if ((Original_EmmaSwFsCdaTemplate == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_EmmaSwFsCdaTemplate));
            }
            if ((Original_EmmaSwDeltaTemplate == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_EmmaSwDeltaTemplate));
            }
            if ((Original_Platform == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_Platform));
            }
            if ((Original_Mother.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((bool)(Original_Mother.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_SWRRatRTL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_SWRRatRTL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_PBU_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((long)(Original_PBU_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_TrueUserResponsibleUserID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((long)(Original_TrueUserResponsibleUserID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string OffName, 
                    string WorkingName, 
                    string ShortName, 
                    string OldSwMessage, 
                    bool OldSwMessageActive, 
                    string OldModelMessage, 
                    bool OldModelMessageActive, 
                    bool AutoAdd, 
                    bool Approved, 
                    byte[] PhoneImage, 
                    string PhoneImageURL, 
                    string Chipset, 
                    string Comment, 
                    System.DateTime InsertTS, 
                    global::System.Nullable<global::System.DateTime> EditTS, 
                    string InsertSemcId, 
                    string EditSemcId, 
                    string Cluster, 
                    string EmmaSwFsTemplate, 
                    string EmmaSwFsCdaTemplate, 
                    string EmmaSwDeltaTemplate, 
                    string Platform, 
                    global::System.Nullable<bool> Mother, 
                    global::System.Nullable<decimal> SWRRatRTL, 
                    global::System.Nullable<long> PBU_ID, 
                    global::System.Nullable<long> TrueUserResponsibleUserID) {
            if ((OffName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OffName));
            }
            if ((WorkingName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(WorkingName));
            }
            if ((ShortName == null)) {
                throw new global::System.ArgumentNullException("ShortName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ShortName));
            }
            if ((OldSwMessage == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(OldSwMessage));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(OldSwMessageActive));
            if ((OldModelMessage == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(OldModelMessage));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(OldModelMessageActive));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(AutoAdd));
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(Approved));
            if ((PhoneImage == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((byte[])(PhoneImage));
            }
            if ((PhoneImageURL == null)) {
                throw new global::System.ArgumentNullException("PhoneImageURL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(PhoneImageURL));
            }
            if ((Chipset == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Chipset));
            }
            if ((Comment == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Comment));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(InsertTS));
            if ((EditTS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(EditTS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((InsertSemcId == null)) {
                throw new global::System.ArgumentNullException("InsertSemcId");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(InsertSemcId));
            }
            if ((EditSemcId == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(EditSemcId));
            }
            if ((Cluster == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Cluster));
            }
            if ((EmmaSwFsTemplate == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(EmmaSwFsTemplate));
            }
            if ((EmmaSwFsCdaTemplate == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(EmmaSwFsCdaTemplate));
            }
            if ((EmmaSwDeltaTemplate == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(EmmaSwDeltaTemplate));
            }
            if ((Platform == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Platform));
            }
            if ((Mother.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(Mother.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((SWRRatRTL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(SWRRatRTL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((PBU_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((long)(PBU_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((TrueUserResponsibleUserID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((long)(TrueUserResponsibleUserID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string OffName, 
                    string WorkingName, 
                    string ShortName, 
                    string OldSwMessage, 
                    bool OldSwMessageActive, 
                    string OldModelMessage, 
                    bool OldModelMessageActive, 
                    bool AutoAdd, 
                    bool Approved, 
                    byte[] PhoneImage, 
                    string PhoneImageURL, 
                    string Chipset, 
                    string Comment, 
                    System.DateTime InsertTS, 
                    global::System.Nullable<global::System.DateTime> EditTS, 
                    string InsertSemcId, 
                    string EditSemcId, 
                    string Cluster, 
                    string EmmaSwFsTemplate, 
                    string EmmaSwFsCdaTemplate, 
                    string EmmaSwDeltaTemplate, 
                    string Platform, 
                    global::System.Nullable<bool> Mother, 
                    global::System.Nullable<decimal> SWRRatRTL, 
                    global::System.Nullable<long> PBU_ID, 
                    global::System.Nullable<long> TrueUserResponsibleUserID, 
                    long Original_PhoneModel_Id, 
                    string Original_OffName, 
                    string Original_WorkingName, 
                    string Original_ShortName, 
                    string Original_OldSwMessage, 
                    bool Original_OldSwMessageActive, 
                    string Original_OldModelMessage, 
                    bool Original_OldModelMessageActive, 
                    bool Original_AutoAdd, 
                    bool Original_Approved, 
                    byte[] Original_PhoneImage, 
                    string Original_PhoneImageURL, 
                    string Original_Chipset, 
                    string Original_Comment, 
                    System.DateTime Original_InsertTS, 
                    global::System.Nullable<global::System.DateTime> Original_EditTS, 
                    string Original_InsertSemcId, 
                    string Original_EditSemcId, 
                    string Original_Cluster, 
                    string Original_EmmaSwFsTemplate, 
                    string Original_EmmaSwFsCdaTemplate, 
                    string Original_EmmaSwDeltaTemplate, 
                    string Original_Platform, 
                    global::System.Nullable<bool> Original_Mother, 
                    global::System.Nullable<decimal> Original_SWRRatRTL, 
                    global::System.Nullable<long> Original_PBU_ID, 
                    global::System.Nullable<long> Original_TrueUserResponsibleUserID, 
                    long PhoneModel_Id) {
            if ((OffName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OffName));
            }
            if ((WorkingName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(WorkingName));
            }
            if ((ShortName == null)) {
                throw new global::System.ArgumentNullException("ShortName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ShortName));
            }
            if ((OldSwMessage == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(OldSwMessage));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(OldSwMessageActive));
            if ((OldModelMessage == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(OldModelMessage));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(OldModelMessageActive));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(AutoAdd));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Approved));
            if ((PhoneImage == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((byte[])(PhoneImage));
            }
            if ((PhoneImageURL == null)) {
                throw new global::System.ArgumentNullException("PhoneImageURL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(PhoneImageURL));
            }
            if ((Chipset == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Chipset));
            }
            if ((Comment == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Comment));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(InsertTS));
            if ((EditTS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(EditTS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((InsertSemcId == null)) {
                throw new global::System.ArgumentNullException("InsertSemcId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(InsertSemcId));
            }
            if ((EditSemcId == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(EditSemcId));
            }
            if ((Cluster == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Cluster));
            }
            if ((EmmaSwFsTemplate == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(EmmaSwFsTemplate));
            }
            if ((EmmaSwFsCdaTemplate == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(EmmaSwFsCdaTemplate));
            }
            if ((EmmaSwDeltaTemplate == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(EmmaSwDeltaTemplate));
            }
            if ((Platform == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Platform));
            }
            if ((Mother.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(Mother.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((SWRRatRTL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(SWRRatRTL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((PBU_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((long)(PBU_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((TrueUserResponsibleUserID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((long)(TrueUserResponsibleUserID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((long)(Original_PhoneModel_Id));
            if ((Original_OffName == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_OffName));
            }
            if ((Original_WorkingName == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_WorkingName));
            }
            if ((Original_ShortName == null)) {
                throw new global::System.ArgumentNullException("Original_ShortName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_ShortName));
            }
            if ((Original_OldSwMessage == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_OldSwMessage));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(Original_OldSwMessageActive));
            if ((Original_OldModelMessage == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_OldModelMessage));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(Original_OldModelMessageActive));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(Original_AutoAdd));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(Original_Approved));
            if ((Original_PhoneImage == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((byte[])(Original_PhoneImage));
            }
            if ((Original_PhoneImageURL == null)) {
                throw new global::System.ArgumentNullException("Original_PhoneImageURL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_PhoneImageURL));
            }
            if ((Original_Chipset == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_Chipset));
            }
            if ((Original_Comment == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_Comment));
            }
            this.Adapter.UpdateCommand.Parameters[47].Value = ((System.DateTime)(Original_InsertTS));
            if ((Original_EditTS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(Original_EditTS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_InsertSemcId == null)) {
                throw new global::System.ArgumentNullException("Original_InsertSemcId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_InsertSemcId));
            }
            if ((Original_EditSemcId == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_EditSemcId));
            }
            if ((Original_Cluster == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_Cluster));
            }
            if ((Original_EmmaSwFsTemplate == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_EmmaSwFsTemplate));
            }
            if ((Original_EmmaSwFsCdaTemplate == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_EmmaSwFsCdaTemplate));
            }
            if ((Original_EmmaSwDeltaTemplate == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_EmmaSwDeltaTemplate));
            }
            if ((Original_Platform == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_Platform));
            }
            if ((Original_Mother.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(Original_Mother.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_SWRRatRTL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((decimal)(Original_SWRRatRTL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_PBU_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((long)(Original_PBU_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_TrueUserResponsibleUserID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((long)(Original_TrueUserResponsibleUserID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[71].Value = ((long)(PhoneModel_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string OffName, 
                    string WorkingName, 
                    string ShortName, 
                    string OldSwMessage, 
                    bool OldSwMessageActive, 
                    string OldModelMessage, 
                    bool OldModelMessageActive, 
                    bool AutoAdd, 
                    bool Approved, 
                    byte[] PhoneImage, 
                    string PhoneImageURL, 
                    string Chipset, 
                    string Comment, 
                    System.DateTime InsertTS, 
                    global::System.Nullable<global::System.DateTime> EditTS, 
                    string InsertSemcId, 
                    string EditSemcId, 
                    string Cluster, 
                    string EmmaSwFsTemplate, 
                    string EmmaSwFsCdaTemplate, 
                    string EmmaSwDeltaTemplate, 
                    string Platform, 
                    global::System.Nullable<bool> Mother, 
                    global::System.Nullable<decimal> SWRRatRTL, 
                    global::System.Nullable<long> PBU_ID, 
                    global::System.Nullable<long> TrueUserResponsibleUserID, 
                    long Original_PhoneModel_Id, 
                    string Original_OffName, 
                    string Original_WorkingName, 
                    string Original_ShortName, 
                    string Original_OldSwMessage, 
                    bool Original_OldSwMessageActive, 
                    string Original_OldModelMessage, 
                    bool Original_OldModelMessageActive, 
                    bool Original_AutoAdd, 
                    bool Original_Approved, 
                    byte[] Original_PhoneImage, 
                    string Original_PhoneImageURL, 
                    string Original_Chipset, 
                    string Original_Comment, 
                    System.DateTime Original_InsertTS, 
                    global::System.Nullable<global::System.DateTime> Original_EditTS, 
                    string Original_InsertSemcId, 
                    string Original_EditSemcId, 
                    string Original_Cluster, 
                    string Original_EmmaSwFsTemplate, 
                    string Original_EmmaSwFsCdaTemplate, 
                    string Original_EmmaSwDeltaTemplate, 
                    string Original_Platform, 
                    global::System.Nullable<bool> Original_Mother, 
                    global::System.Nullable<decimal> Original_SWRRatRTL, 
                    global::System.Nullable<long> Original_PBU_ID, 
                    global::System.Nullable<long> Original_TrueUserResponsibleUserID) {
            return this.Update(OffName, WorkingName, ShortName, OldSwMessage, OldSwMessageActive, OldModelMessage, OldModelMessageActive, AutoAdd, Approved, PhoneImage, PhoneImageURL, Chipset, Comment, InsertTS, EditTS, InsertSemcId, EditSemcId, Cluster, EmmaSwFsTemplate, EmmaSwFsCdaTemplate, EmmaSwDeltaTemplate, Platform, Mother, SWRRatRTL, PBU_ID, TrueUserResponsibleUserID, Original_PhoneModel_Id, Original_OffName, Original_WorkingName, Original_ShortName, Original_OldSwMessage, Original_OldSwMessageActive, Original_OldModelMessage, Original_OldModelMessageActive, Original_AutoAdd, Original_Approved, Original_PhoneImage, Original_PhoneImageURL, Original_Chipset, Original_Comment, Original_InsertTS, Original_EditTS, Original_InsertSemcId, Original_EditSemcId, Original_Cluster, Original_EmmaSwFsTemplate, Original_EmmaSwFsCdaTemplate, Original_EmmaSwDeltaTemplate, Original_Platform, Original_Mother, Original_SWRRatRTL, Original_PBU_ID, Original_TrueUserResponsibleUserID, Original_PhoneModel_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblCrashLinkTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblCrashLinkTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblCrashLink";
            tableMapping.ColumnMappings.Add("CrashLink_id", "CrashLink_id");
            tableMapping.ColumnMappings.Add("PhoneTrans_id", "PhoneTrans_id");
            tableMapping.ColumnMappings.Add("CrashLink", "CrashLink");
            tableMapping.ColumnMappings.Add("Isvisible", "Isvisible");
            tableMapping.ColumnMappings.Add("IsSuccessful", "IsSuccessful");
            tableMapping.ColumnMappings.Add("PhoneModel_Id", "PhoneModel_Id");
            tableMapping.ColumnMappings.Add("Workingname", "Workingname");
            tableMapping.ColumnMappings.Add("Sw1Revision", "Sw1Revision");
            tableMapping.ColumnMappings.Add("LogName", "LogName");
            tableMapping.ColumnMappings.Add("DeliverTime", "DeliverTime");
            tableMapping.ColumnMappings.Add("Matchdate", "Matchdate");
            tableMapping.ColumnMappings.Add("LogType", "LogType");
            tableMapping.ColumnMappings.Add("IsLUT", "IsLUT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[tblCrashLink] WHERE (([CrashLink_id] = @Original_CrashLink_id) AND ([PhoneTrans_id] = @Original_PhoneTrans_id) AND ((@IsNull_CrashLink = 1 AND [CrashLink] IS NULL) OR ([CrashLink] = @Original_CrashLink)) AND ([Isvisible] = @Original_Isvisible) AND ([IsSuccessful] = @Original_IsSuccessful) AND ((@IsNull_PhoneModel_Id = 1 AND [PhoneModel_Id] IS NULL) OR ([PhoneModel_Id] = @Original_PhoneModel_Id)) AND ((@IsNull_Workingname = 1 AND [Workingname] IS NULL) OR ([Workingname] = @Original_Workingname)) AND ((@IsNull_Sw1Revision = 1 AND [Sw1Revision] IS NULL) OR ([Sw1Revision] = @Original_Sw1Revision)) AND ((@IsNull_LogName = 1 AND [LogName] IS NULL) OR ([LogName] = @Original_LogName)) AND ((@IsNull_DeliverTime = 1 AND [DeliverTime] IS NULL) OR ([DeliverTime] = @Original_DeliverTime)) AND ((@IsNull_Matchdate = 1 AND [Matchdate] IS NULL) OR ([Matchdate] = @Original_Matchdate)) AND ((@IsNull_LogType = 1 AND [LogType] IS NULL) OR ([LogType] = @Original_LogType)) AND ((@IsNull_IsLUT = 1 AND [IsLUT] IS NULL) OR ([IsLUT] = @Original_IsLUT)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrashLink_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrashLink_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneTrans_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneTrans_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CrashLink", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrashLink", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrashLink", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrashLink", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Isvisible", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Isvisible", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsSuccessful", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSuccessful", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhoneModel_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneModel_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneModel_Id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneModel_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Workingname", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Workingname", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Workingname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Workingname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sw1Revision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sw1Revision", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sw1Revision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sw1Revision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeliverTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliverTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliverTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliverTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Matchdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Matchdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Matchdate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Matchdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsLUT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLUT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsLUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[tblCrashLink] ([PhoneTrans_id], [CrashLink], [Isvisible], [IsSuccessful], [PhoneModel_Id], [Workingname], [Sw1Revision], [LogName], [DeliverTime], [Matchdate], [LogType], [IsLUT]) VALUES (@PhoneTrans_id, @CrashLink, @Isvisible, @IsSuccessful, @PhoneModel_Id, @Workingname, @Sw1Revision, @LogName, @DeliverTime, @Matchdate, @LogType, @IsLUT);
SELECT CrashLink_id, PhoneTrans_id, CrashLink, Isvisible, IsSuccessful, PhoneModel_Id, Workingname, Sw1Revision, LogName, DeliverTime, Matchdate, LogType, IsLUT FROM tblCrashLink WHERE (CrashLink_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneTrans_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneTrans_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrashLink", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrashLink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Isvisible", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Isvisible", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsSuccessful", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSuccessful", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneModel_Id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneModel_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Workingname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Workingname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sw1Revision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sw1Revision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliverTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliverTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Matchdate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Matchdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsLUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tblCrashLink] SET [PhoneTrans_id] = @PhoneTrans_id, [CrashLink] = @" +
                "CrashLink, [Isvisible] = @Isvisible, [IsSuccessful] = @IsSuccessful, [PhoneModel" +
                "_Id] = @PhoneModel_Id, [Workingname] = @Workingname, [Sw1Revision] = @Sw1Revisio" +
                "n, [LogName] = @LogName, [DeliverTime] = @DeliverTime, [Matchdate] = @Matchdate," +
                " [LogType] = @LogType, [IsLUT] = @IsLUT WHERE (([CrashLink_id] = @Original_Crash" +
                "Link_id) AND ([PhoneTrans_id] = @Original_PhoneTrans_id) AND ((@IsNull_CrashLink" +
                " = 1 AND [CrashLink] IS NULL) OR ([CrashLink] = @Original_CrashLink)) AND ([Isvi" +
                "sible] = @Original_Isvisible) AND ([IsSuccessful] = @Original_IsSuccessful) AND " +
                "((@IsNull_PhoneModel_Id = 1 AND [PhoneModel_Id] IS NULL) OR ([PhoneModel_Id] = @" +
                "Original_PhoneModel_Id)) AND ((@IsNull_Workingname = 1 AND [Workingname] IS NULL" +
                ") OR ([Workingname] = @Original_Workingname)) AND ((@IsNull_Sw1Revision = 1 AND " +
                "[Sw1Revision] IS NULL) OR ([Sw1Revision] = @Original_Sw1Revision)) AND ((@IsNull" +
                "_LogName = 1 AND [LogName] IS NULL) OR ([LogName] = @Original_LogName)) AND ((@I" +
                "sNull_DeliverTime = 1 AND [DeliverTime] IS NULL) OR ([DeliverTime] = @Original_D" +
                "eliverTime)) AND ((@IsNull_Matchdate = 1 AND [Matchdate] IS NULL) OR ([Matchdate" +
                "] = @Original_Matchdate)) AND ((@IsNull_LogType = 1 AND [LogType] IS NULL) OR ([" +
                "LogType] = @Original_LogType)) AND ((@IsNull_IsLUT = 1 AND [IsLUT] IS NULL) OR (" +
                "[IsLUT] = @Original_IsLUT)));\r\nSELECT CrashLink_id, PhoneTrans_id, CrashLink, Is" +
                "visible, IsSuccessful, PhoneModel_Id, Workingname, Sw1Revision, LogName, Deliver" +
                "Time, Matchdate, LogType, IsLUT FROM tblCrashLink WHERE (CrashLink_id = @CrashLi" +
                "nk_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneTrans_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneTrans_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrashLink", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrashLink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Isvisible", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Isvisible", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsSuccessful", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSuccessful", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneModel_Id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneModel_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Workingname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Workingname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sw1Revision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sw1Revision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliverTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliverTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Matchdate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Matchdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsLUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrashLink_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrashLink_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneTrans_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneTrans_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CrashLink", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrashLink", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrashLink", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrashLink", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Isvisible", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Isvisible", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsSuccessful", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSuccessful", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhoneModel_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneModel_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneModel_Id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneModel_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Workingname", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Workingname", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Workingname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Workingname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sw1Revision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sw1Revision", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sw1Revision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sw1Revision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeliverTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliverTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliverTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliverTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Matchdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Matchdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Matchdate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Matchdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LogType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LogType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsLUT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLUT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsLUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsLUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrashLink_id", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "CrashLink_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SEMC.CrashLink.BackgroudService.Properties.Settings.Default.MtbfConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CrashLink_id, PhoneTrans_id, CrashLink, Isvisible, IsSuccessful, PhoneMode" +
                "l_Id, Workingname, Sw1Revision, LogName, DeliverTime, Matchdate, LogType, IsLUT " +
                "FROM dbo.tblCrashLink";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MTBF.tblCrashLinkDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MTBF.tblCrashLinkDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MTBF.tblCrashLinkDataTable dataTable = new MTBF.tblCrashLinkDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MTBF.tblCrashLinkDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MTBF dataSet) {
            return this.Adapter.Update(dataSet, "tblCrashLink");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_CrashLink_id, long Original_PhoneTrans_id, string Original_CrashLink, bool Original_Isvisible, bool Original_IsSuccessful, global::System.Nullable<long> Original_PhoneModel_Id, string Original_Workingname, string Original_Sw1Revision, string Original_LogName, global::System.Nullable<global::System.DateTime> Original_DeliverTime, global::System.Nullable<global::System.DateTime> Original_Matchdate, string Original_LogType, global::System.Nullable<bool> Original_IsLUT) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_CrashLink_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_PhoneTrans_id));
            if ((Original_CrashLink == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_CrashLink));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_Isvisible));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_IsSuccessful));
            if ((Original_PhoneModel_Id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((long)(Original_PhoneModel_Id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Workingname == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Workingname));
            }
            if ((Original_Sw1Revision == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Sw1Revision));
            }
            if ((Original_LogName == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_LogName));
            }
            if ((Original_DeliverTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_DeliverTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Matchdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_Matchdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_LogType == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_LogType));
            }
            if ((Original_IsLUT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((bool)(Original_IsLUT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long PhoneTrans_id, string CrashLink, bool Isvisible, bool IsSuccessful, global::System.Nullable<long> PhoneModel_Id, string Workingname, string Sw1Revision, string LogName, global::System.Nullable<global::System.DateTime> DeliverTime, global::System.Nullable<global::System.DateTime> Matchdate, string LogType, global::System.Nullable<bool> IsLUT) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(PhoneTrans_id));
            if ((CrashLink == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CrashLink));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(Isvisible));
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(IsSuccessful));
            if ((PhoneModel_Id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((long)(PhoneModel_Id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Workingname == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Workingname));
            }
            if ((Sw1Revision == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Sw1Revision));
            }
            if ((LogName == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(LogName));
            }
            if ((DeliverTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(DeliverTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Matchdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(Matchdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((LogType == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(LogType));
            }
            if ((IsLUT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(IsLUT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long PhoneTrans_id, 
                    string CrashLink, 
                    bool Isvisible, 
                    bool IsSuccessful, 
                    global::System.Nullable<long> PhoneModel_Id, 
                    string Workingname, 
                    string Sw1Revision, 
                    string LogName, 
                    global::System.Nullable<global::System.DateTime> DeliverTime, 
                    global::System.Nullable<global::System.DateTime> Matchdate, 
                    string LogType, 
                    global::System.Nullable<bool> IsLUT, 
                    long Original_CrashLink_id, 
                    long Original_PhoneTrans_id, 
                    string Original_CrashLink, 
                    bool Original_Isvisible, 
                    bool Original_IsSuccessful, 
                    global::System.Nullable<long> Original_PhoneModel_Id, 
                    string Original_Workingname, 
                    string Original_Sw1Revision, 
                    string Original_LogName, 
                    global::System.Nullable<global::System.DateTime> Original_DeliverTime, 
                    global::System.Nullable<global::System.DateTime> Original_Matchdate, 
                    string Original_LogType, 
                    global::System.Nullable<bool> Original_IsLUT, 
                    long CrashLink_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(PhoneTrans_id));
            if ((CrashLink == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CrashLink));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(Isvisible));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(IsSuccessful));
            if ((PhoneModel_Id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(PhoneModel_Id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Workingname == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Workingname));
            }
            if ((Sw1Revision == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Sw1Revision));
            }
            if ((LogName == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(LogName));
            }
            if ((DeliverTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(DeliverTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Matchdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Matchdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((LogType == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(LogType));
            }
            if ((IsLUT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(IsLUT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(Original_CrashLink_id));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((long)(Original_PhoneTrans_id));
            if ((Original_CrashLink == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_CrashLink));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(Original_Isvisible));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(Original_IsSuccessful));
            if ((Original_PhoneModel_Id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((long)(Original_PhoneModel_Id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Workingname == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Workingname));
            }
            if ((Original_Sw1Revision == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Sw1Revision));
            }
            if ((Original_LogName == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_LogName));
            }
            if ((Original_DeliverTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_DeliverTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Matchdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(Original_Matchdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_LogType == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_LogType));
            }
            if ((Original_IsLUT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(Original_IsLUT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((long)(CrashLink_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long PhoneTrans_id, 
                    string CrashLink, 
                    bool Isvisible, 
                    bool IsSuccessful, 
                    global::System.Nullable<long> PhoneModel_Id, 
                    string Workingname, 
                    string Sw1Revision, 
                    string LogName, 
                    global::System.Nullable<global::System.DateTime> DeliverTime, 
                    global::System.Nullable<global::System.DateTime> Matchdate, 
                    string LogType, 
                    global::System.Nullable<bool> IsLUT, 
                    long Original_CrashLink_id, 
                    long Original_PhoneTrans_id, 
                    string Original_CrashLink, 
                    bool Original_Isvisible, 
                    bool Original_IsSuccessful, 
                    global::System.Nullable<long> Original_PhoneModel_Id, 
                    string Original_Workingname, 
                    string Original_Sw1Revision, 
                    string Original_LogName, 
                    global::System.Nullable<global::System.DateTime> Original_DeliverTime, 
                    global::System.Nullable<global::System.DateTime> Original_Matchdate, 
                    string Original_LogType, 
                    global::System.Nullable<bool> Original_IsLUT) {
            return this.Update(PhoneTrans_id, CrashLink, Isvisible, IsSuccessful, PhoneModel_Id, Workingname, Sw1Revision, LogName, DeliverTime, Matchdate, LogType, IsLUT, Original_CrashLink_id, Original_PhoneTrans_id, Original_CrashLink, Original_Isvisible, Original_IsSuccessful, Original_PhoneModel_Id, Original_Workingname, Original_Sw1Revision, Original_LogName, Original_DeliverTime, Original_Matchdate, Original_LogType, Original_IsLUT, Original_CrashLink_id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private tblPhoneModelTableAdapter _tblPhoneModelTableAdapter;
        
        private tblCrashLinkTableAdapter _tblCrashLinkTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tblPhoneModelTableAdapter tblPhoneModelTableAdapter {
            get {
                return this._tblPhoneModelTableAdapter;
            }
            set {
                this._tblPhoneModelTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tblCrashLinkTableAdapter tblCrashLinkTableAdapter {
            get {
                return this._tblCrashLinkTableAdapter;
            }
            set {
                this._tblCrashLinkTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tblPhoneModelTableAdapter != null) 
                            && (this._tblPhoneModelTableAdapter.Connection != null))) {
                    return this._tblPhoneModelTableAdapter.Connection;
                }
                if (((this._tblCrashLinkTableAdapter != null) 
                            && (this._tblCrashLinkTableAdapter.Connection != null))) {
                    return this._tblCrashLinkTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tblPhoneModelTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblCrashLinkTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(MTBF dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tblCrashLinkTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblCrashLink.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblCrashLinkTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblPhoneModelTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblPhoneModel.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblPhoneModelTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(MTBF dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tblCrashLinkTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblCrashLink.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblCrashLinkTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblPhoneModelTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblPhoneModel.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblPhoneModelTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(MTBF dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tblPhoneModelTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblPhoneModel.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblPhoneModelTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblCrashLinkTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblCrashLink.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblCrashLinkTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(MTBF dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tblPhoneModelTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblPhoneModelTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblCrashLinkTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblCrashLinkTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tblPhoneModelTableAdapter != null)) {
                    revertConnections.Add(this._tblPhoneModelTableAdapter, this._tblPhoneModelTableAdapter.Connection);
                    this._tblPhoneModelTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblPhoneModelTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblPhoneModelTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblPhoneModelTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblPhoneModelTableAdapter.Adapter);
                    }
                }
                if ((this._tblCrashLinkTableAdapter != null)) {
                    revertConnections.Add(this._tblCrashLinkTableAdapter, this._tblCrashLinkTableAdapter.Connection);
                    this._tblCrashLinkTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblCrashLinkTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblCrashLinkTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblCrashLinkTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblCrashLinkTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tblPhoneModelTableAdapter != null)) {
                    this._tblPhoneModelTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblPhoneModelTableAdapter]));
                    this._tblPhoneModelTableAdapter.Transaction = null;
                }
                if ((this._tblCrashLinkTableAdapter != null)) {
                    this._tblCrashLinkTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblCrashLinkTableAdapter]));
                    this._tblCrashLinkTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591